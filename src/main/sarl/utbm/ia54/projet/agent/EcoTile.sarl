package utbm.ia54.projet.^agent

import io.sarl.core.Behaviors
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.util.OpenEventSpaceSpecification
import io.sarl.util.Scopes
import java.util.UUID
import utbm.ia54.projet.message.AskSynchroMessage
import utbm.ia54.projet.message.LogMessage
import utbm.ia54.projet.message.SynchroResponse

agent EcoTile extends EcoAgent {

	uses Lifecycle, DefaultContextInteractions,Behaviors
	
	var posFinale : Integer
	on Initialize {
		// Initialize parameters
		posFinale = occurrence.parameters.get(0) as Integer
		globalSpace = defaultContext.getOrCreateSpaceWithSpec(
			typeof(OpenEventSpaceSpecification),
			occurrence.parameters.get(1) as UUID
		)
		globalSpace.register(asEventListener)
	}
	
//	on AskSynchroMessage {
//		idLinked = occurrence.id
//		pos = occurrence.pos
//		emit(new SynchroResponse(ID,posFinale),Scopes.addresses(globalSpace.getAddress(idLinked)))
//		// Debug
//		println("Tile"+pos+" | Id:"+ID+" | Linked:"+idLinked)
//		
//		killMe
//	}
//	
//	on SynchroResponse{
//		idLinked = occurrence.id
//		pos = occurrence.pos
//	}
	
	on LogMessage{
		println("id : " + ID + " | pos " + pos + " | idLinked : " + idLinked + " | posFinale : " + posFinale + "\n")
		killMe
	}
}